-- In this SQL, I am querying a sample database containing 6 tables, one listing all customers and the other five listing the sales for months 
January - May, in order to quantify statistics about customer and order data. 


-- Viewing the different tables in BIT_DB database before querying*/
SELECT * FROM BIT_DB.customers LIMIT 20;
SELECT * FROM BIT_DB.JanSales LIMIT 20;


-- #1 How many orders were placed in January?*/
SELECT count(orderID) FROM BIT_DB.JanSales;
/*total orders in Jan = 9723*/


-- #2 How many of those orders placed in January were for an iPhone?*/
SELECT count(orderID) FROM BIT_DB.JanSales WHERE Product = 'iPhone';
/*total orders of iPhones in Jan = 379*/
    

-- #3 Select the customer account numbers for all the orders that were placed in February*/
SELECT acctnum FROM BIT_DB.customers CUST
    INNER JOIN BIT_DB.FebSales FEB ON CUST.order_id = FEB.orderID;
  
  
-- #4A Which product was the cheapest one sold in January, and what was the price? For this query, we use the distinct command to remove duplicate rows*/ 
SELECT distinct product, MIN(price) 
FROM BIT_DB.JanSales JAN 
GROUP BY product, price
ORDER BY price ASC 
LIMIT 1; 


-- #4B second method using a subquery instead for a simpler code*/ 
SELECT distinct Product, price
FROM BIT_DB.JanSales
WHERE price in (SELECT min(price) FROM BIT_DB.JanSales)


-- #5 What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold 
and the price of the products).*/
SELECT SUM(quantity)*price as Revenue, product
FROM BIT_DB.JanSales
GROUP BY product;


-- #6 Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?*/
SELECT product, SUM(quantity) as quantity, SUM(quantity) * price as Revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;


-- #7 How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?*/
SELECT count(CUST.acctnum), AVG(quantity * price)
FROM BIT_DB.FebSales FEB
INNER JOIN BIT_DB.customers CUST
ON FEB.orderid = CUST.order_id
WHERE FEB.Quantity > 2;


-- #8 List all the products sold in Los Angeles in February, and include how many of each were sold.*/
-- Using the commands like and % */
SELECT Product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%' 
GROUP BY Product; 


-- #9 Which locations in New York received at least 3 orders in January, and how many orders did they each receive?*/
SELECT product, sum(quantity)
FROM BIT_DB.FebSales
WHERE product like '%headphone%' 
GROUP BY product;


-- #10 How many of each type of headphone were sold in Feburary?*/
SELECT distinct location, count(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
GROUP BY location
HAVING count(orderID)>2;


-- #11 What was the average amount spent per account in Feburary?*/ 
SELECT sum(quantity*price)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb
    LEFT JOIN BIT_DB.customers cust
    ON FEB.orderid=cust.order_id;
    

-- #12 What was the average quantity of products purchased per account in February?*/ 
SELECT sum(quantity)/count(customers.acctnum)
FROM FebSales
    LEFT JOIN customers 
    ON FebSales.orderID = customers.order_id;


-- #13 Which product brought in the most revenue in January, and how much revenue did it bring in total?*/ 
SELECT product, sum(quantity * price) as revenue
FROM JanSales
GROUP BY product
ORDER BY sum(quantity * price) desc
LIMIT 1;
